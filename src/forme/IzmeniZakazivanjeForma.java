/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.StavkaZakazivanja;
import domen.Tecaj;
import domen.Termin;
import domen.ZakazivanjeTermina;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import komunikacija.KlijentskiZahtev;
import komunikacija.KomunikacijaSaServerom;
import komunikacija.ServerskiOdgovor;
import modeli.ModelTabeleStavke;
import operacije.Operacije;

/**
 *
 * @author HP
 */
public class IzmeniZakazivanjeForma extends javax.swing.JFrame {

    private ZakazivanjeTermina zakazivanje;
    
    /**
     * Creates new form IzmeniZakazivanjeForma
     */
    public IzmeniZakazivanjeForma() {
        initComponents();
        this.setLocationRelativeTo(null);
        ModelTabeleStavke mts = new ModelTabeleStavke();
        tblStavke.setModel(mts);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblInstruktor = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblClan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        btnOdustani = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Izmena zakazanih termina");

        jLabel1.setText("Zakazao instruktor:");

        lblInstruktor.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblInstruktor.setText("jLabel2");

        jLabel2.setText("Za clana:");

        lblClan.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblClan.setText("jLabel3");

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavke);

        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj stavku");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi stavku");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Sacuvaj izmene");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblInstruktor)
                        .addGap(81, 81, 81)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblClan)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIzmeni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOdustani)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblInstruktor)
                    .addComponent(jLabel2)
                    .addComponent(lblClan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOdustani)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi)
                    .addComponent(btnIzmeni))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        DodajStavkuForma dsf = new DodajStavkuForma(this, true);
        dsf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dsf.setVisible(true);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int selectedRow = tblStavke.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Morate izabrati stavku!");
            return;
        }
        
        ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
        
        StavkaZakazivanja sz = mts.dajStavku(selectedRow);
        
        mts.ukloni(selectedRow);
        
        
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
        ArrayList<StavkaZakazivanja> stavke = mts.getLista();
        
        zakazivanje.setStavkeZakazivanja(stavke);
        
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.IZMENI_ZAKAZIVANJE);
        kz.setArgument(zakazivanje);
        
        try {
            KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        } catch (InterruptedException ex) {
            Logger.getLogger(IzmeniZakazivanjeForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();
        
        if(so.isUspesno()){
            JOptionPane.showMessageDialog(this, so.getPoruka());
        }else{
            JOptionPane.showMessageDialog(this, so.getPoruka(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
        
        this.dispose();
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IzmeniZakazivanjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IzmeniZakazivanjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IzmeniZakazivanjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IzmeniZakazivanjeForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IzmeniZakazivanjeForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClan;
    private javax.swing.JLabel lblInstruktor;
    private javax.swing.JTable tblStavke;
    // End of variables declaration//GEN-END:variables

    void postaviVrednosti(ZakazivanjeTermina zt) {
        this.zakazivanje = zt;
        lblInstruktor.setText(zakazivanje.getInstruktor() + "");
        lblClan.setText(zakazivanje.getClan() + "");
        popuniStavke(zakazivanje);
    }

    private void popuniStavke(ZakazivanjeTermina zakazivanje) {
        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacije.UCITAJ_LISTU_STAVKI_ZAKAZIVANJA);
        kz.setArgument(zakazivanje);

        try {
            KomunikacijaSaServerom.getInstance().posaljiZahtev(kz);
        } catch (InterruptedException ex) {
            Logger.getLogger(IzmeniZakazivanjeForma.class.getName()).log(Level.SEVERE, null, ex);
        }

        ServerskiOdgovor so = KomunikacijaSaServerom.getInstance().primiOdgovor();

        if (so.isUspesno()) {
            ArrayList<StavkaZakazivanja> lista = (ArrayList<StavkaZakazivanja>) so.getArgument();
            ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
            mts.setLista(lista);
        } else {
            JOptionPane.showMessageDialog(this, so.getPoruka());
            return;
        }
    }

    void dodajStavku(Tecaj tecaj, Termin termin) {
        ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();

        if (mts.postoji(tecaj, termin)) {
            JOptionPane.showMessageDialog(this, "Vec postoji ta stavka!");
            return;
        }
        
        int rb = mts.vratiRb();
        StavkaZakazivanja sz = new StavkaZakazivanja(rb, zakazivanje, tecaj, termin);
        
        mts.dodajStavku(sz);
        
    }

}
